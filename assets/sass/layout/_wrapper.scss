///
/// Solid State by HTML5 UP
/// html5up.net | @ajlkn
/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
///

/* Wrapper */

/// Sets the colors of the wrapper's top/bottom edges.
/// @param {string} $color Color.
#wrapper {
  > header {
    @include padding(
      7.5em,
      0,
      (3.5em, 0, _size(wrapper-edges, large) * -0.5, 0)
    );

    .inner {
      margin: 0 auto;
      max-width: 1920px;
      @include set-vw(padding-left, 210.73px);
      @include set-vw(padding-bottom, 201px);
      @include set-vw(padding-top, 193px);
    }

    p {
      color: #fff;
      @include set-vw(font-size, 24px);
      @include set-vw(line-height, 35px);
      font-style: normal;
      font-weight: 600;
      @include set-vw(padding-top, 67px);
      @include set-vw(max-width, 1199px);

      @include breakpoint("<=large") {
        text-align: justify;
        font-size: 15px;
        line-height: 21px;
        font-style: normal;
        font-weight: 600;
      }
    }
  }

  @include breakpoint("<=large") {
    > header {
      @include padding(5em, 0, (4em, 0, _size(wrapper-edges, large) * 0.5, 0));

      background-color: _palette(bg);

      background-image: linear-gradient(
          to top,
          transparentize(_palette(bg), 0.2),
          transparentize(_palette(bg), 0.2)
        ),
        url("../../images/bg.jpg");

      background-size: auto, cover;

      background-position: center, 0% 30%;

      margin-bottom: (_size(wrapper-edges, large) * -1);
    }
  }

  @include breakpoint("<=medium") {
    > header {
      @include padding(
        7em,
        3em,
        (4em, 0, _size(wrapper-edges, medium) * 0.5, 0)
      );

      background-size: auto, cover;

      background-position: center, 0% 0%;

      margin-bottom: (_size(wrapper-edges, medium) * -1);

      .inner {
        width: 100%;
      }
    }
  }

  @include breakpoint("<=small") {
    > header {
      @include padding(
        3.75em,
        2em,
        (2.75em, 0, _size(wrapper-edges, small) * 0.5, 0)
      );

      background-size: auto, 125%;

      margin-bottom: (_size(wrapper-edges, small) * -1);
    }
  }
}

.wrapper.linear {
  background: linear-gradient(180deg, #fff 0%, #ecf6ff 77.5%);
}

.wrapper {
  background-color: _palette(bg);
  position: relative;

  &.alt {
    &:before {
      @include vendor("transform", "scaleX(-1)");
    }

    &:after {
      @include vendor("transform", "scaleY(-1) scaleX(-1)");
    }
  }

  .inner {
    @include padding(3em, 0);
    margin: 0 auto;
    max-width: 1920px;
    @include set-vw(padding-top, 165px);
    @include set-vw(padding-right, 207px);
    @include set-vw(padding-bottom, 164px);
    @include set-vw(padding-left, 207px);
  }

  &.spotlight {
    background-color: #fff;

    h2,
    a {
      color: _palette(blue);
    }

    .inner {
      @include vendor("display", "flex");
      @include vendor("align-items", "center");
      @include vendor("flex-direction", "row");
      @include set-vw(gap, 45px);
    }

    .image {
      border-radius: 100%;
      margin: 0 _size(section-spacing, large) _size(element-margin) 0;
      width: 22em;
      overflow: hidden;
      -ms-flex: 1;

      img {
        border-radius: 100%;
        width: 100%;
      }
    }

    .content {
      width: 100%;
      -ms-flex: 2;
    }

    @for $i from 2 through _misc(max-wrapper-styles) {
      // 홀수와 짝수에 따라 다른 배경색을 설정
      $color: #fff;
      @if $i % 2 == 0 {
        // 짝수인 경우
        $color: #f1f8ff;
      }

      &.style#{$i} {
        background-color: $color;
      }
    }
  }

  @include breakpoint("<=medium") {
    &:before,
    &:after {
      height: _size(wrapper-edges, medium);
    }

    &:before {
      top: (_size(wrapper-edges, medium) * -1);
    }

    &:after {
      bottom: (_size(wrapper-edges, medium) * -1);
      left: 0;
    }

    .inner {
      @include padding(3em, 3em);
      width: 100%;
    }

    &.spotlight {
      .image {
        margin: 0 _size(section-spacing, medium) _size(element-margin) 0;
        width: 32em;
      }

      &:nth-child(2n - 1) {
        .image {
          margin: 0 0 _size(element-margin) _size(section-spacing, medium);
        }
      }
    }
  }

  @include breakpoint("<=small") {
    &:before,
    &:after {
      height: _size(wrapper-edges, small);
    }

    &:before {
      top: (_size(wrapper-edges, small) * -1);
    }

    &:after {
      bottom: (_size(wrapper-edges, small) * -1);
      left: 0;
    }

    .inner {
      @include padding(2em, 2em);
    }

    &.spotlight {
      .inner {
        @include vendor("align-items", "flex-start");
      }

      .image {
        width: 19em;
        margin: 0 _size(section-spacing, small) _size(element-margin) 0;
      }

      &:nth-child(2n - 1) {
        .image {
          margin: 0 0 _size(element-margin) _size(section-spacing, small);
        }
      }
    }
  }

  @include breakpoint("<=xsmall") {
    &.spotlight {
      .inner {
        display: block;
      }

      .image {
        margin: 0 0 (_size(element-margin) * 0.5) 0 !important;
        max-width: 85%;
        width: 12em;
      }
    }
  }

  @include breakpoint("<=xxsmall") {
    .inner {
      @include padding(2em, 1.5em);
    }
  }
}

.linear-button {
  display: flex;
  width: 717px;
  height: 146px;
  flex-shrink: 0;
  border-radius: 15px;
  background: linear-gradient(90deg, #00c2ff 0%, #5256cd 100%);
  justify-content: center;
  align-items: center;
}

.linear-button span {
  color: #fff;
  text-align: center;
  font-size: 5rem;
  font-style: normal;
  font-weight: 800;
  line-height: 8.7rem; /* 174% */
}

.wrapper.linear .inner {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.text-hr {
  display: flex;
  @include set-vw(gap, 51px);
}

.text-hr .hr {
  flex: 1 1 auto;
  border-bottom: 1px solid _palette(blue);
  margin-bottom: 4px;
}

.media {
  background: #fff;

  h2 {
    @include set-vw(font-size, 40px);
    @include set-vw(line-height, 87px);
    color: #2b2e83;
    font-style: normal;
    font-weight: 800;
    border-bottom: 1.5px solid _palette(blue);

    @include breakpoint("<=large") {
      // @include set-vw(font-size, 26px, 480);
      font-size: 26px;
      border-bottom: 1px solid _palette(blue);
    }

    @include breakpoint("<=xsmall") {
      // @include set-vw(font-size, 26px, 480);
      width: 200px;
    }
  }
}

.footer {
  .h2 {
    @include set-vw(font-size, 40px);
    @include set-vw(line-height, 87px);
    color: _palette(white);
    font-style: normal;
    font-weight: 800;
    border-bottom: 1px solid _palette(white);

    @include breakpoint("<=large") {
      // @include set-vw(font-size, 26px, 480);
      font-size: 26px;
    }

    @include breakpoint("<=xsmall") {
      // @include set-vw(font-size, 26px, 480);
      width: 200px;
    }
  }
}

.line-text {
  display: flex;

  .line {
    border-bottom: 1px solid white;
    flex: 1 1 auto;
    margin-bottom: 0.15em;
    margin-left: 40px;
    text-align: end;
    @include set-vw(font-size, 30px);
    color: rgba(255, 255, 255, 0.6);
    font-style: normal;
    font-weight: 800;
    @include set-vw(letter-spacing, -0.6px);
    vertical-align: bottom;

    @include breakpoint("<=large") {
      // @include set-vw(font-size, 26px, 480);
      font-size: 15px;
    }
  }
}
